name: Publish Legal Prose Repository GitHub Package
on:
  release:
    types: [created]
jobs:
  publish:
    name: Publish Docker image to github
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: echo ${{ env.RELEASE_VERSION }}
      - name: Publish Spring API
        run: mvn -Drevision=${{ env.RELEASE_VERSION }} clean compile jib:build -Djib.to.auth.username=${{ github.actor }} -Djib.to.auth.password=${{ secrets.GITHUB_TOKEN }}
  deploy-app:
    name: Deploy to cluster
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - run: mkdir ~/.kube/ && echo "${{ secrets.KUBECONFIG_FILE}}" | base64 -d > ~/.kube/config
    - run: echo "${{ secrets.CA_CRT }}" | base64 -d > ca.crt
    - run: echo "${{ secrets.TLS_KEY }}" | base64 -d > ta.key
    - uses: azure/setup-helm@v1
      with:
        version: '3.1.2'
      id: install
    - name: Install Open VPN
      run: sudo apt-get update && sudo apt-get install openvpn openvpn-systemd-resolved -y
    - name: Connect to VPN
      uses: "kota65535/github-openvpn-connect-action@v1"
      with:
        config_file: .github/vpn/config.ovpn
        username: ${{ secrets.OVPN_USERNAME }}
        password: ${{ secrets.OVPN_PASSWORD }}
    - name: Deploy LPR API to operatora
      run: |
        helm upgrade legal-prose-api ./helm/charts/legal-prose-repository/ \
          --install \
          --namespace operatora-ns \
          --repo ./helm/charts/legal-prose-repository/ \
          --values ./helm/charts/legal-prose-repository/values.yaml \
          --set dockerTag=${{ env.RELEASE_VERSION }} \
          --set postgres.username=${{ secrets.OPERATORA_POSTGRES_USERNAME }} \
          --set postgres.password=${{ secrets.OPERATORA_POSTGRES_PASSWORD }} \
          --set postgres.name=operator_a_legal_prose \
          --set service.prefix=/operatora/legal-prose-repository \
          --set governanceBaseUrl="http://172.28.3.111/operatora/governance/api/v1" \
          --set identityBaseUrl="http://172.28.3.153:6200" \
          --set callbacks.updateTemplateIdentity="http://172.28.3.111/operatora/legal-prose-repository/api/v1/legal-prose-templates/%s/identity"
    - name: Deploy LPR API to regulatora
      run: |
        helm upgrade legal-prose-api ./helm/charts/legal-prose-repository/ \
          --install \
          --namespace regulatora-ns \
          --repo ./helm/charts/legal-prose-repository/ \
          --values ./helm/charts/legal-prose-repository/values.yaml \
          --set dockerTag=${{ env.RELEASE_VERSION }} \
          --set postgres.username=${{ secrets.OPERATORA_POSTGRES_USERNAME }} \
          --set postgres.password=${{ secrets.OPERATORA_POSTGRES_PASSWORD }} \
          --set postgres.name=operator_a_legal_prose \
          --set service.prefix=/regulatora/legal-prose-repository \
          --set governanceBaseUrl="http://172.28.3.111/regulatora/governance/api/v1" \
          --set identityBaseUrl="http://172.28.3.153:6300" \
          --set callbacks.updateTemplateIdentity="http://172.28.3.111/regulatora/legal-prose-repository/api/v1/legal-prose-templates/%s/identity"
